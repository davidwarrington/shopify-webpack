(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{355:function(e,t,a){e.exports=a.p+"assets/img/open-assets-in-new-tab.1d7b3224.png"},356:function(e,t,a){e.exports=a.p+"assets/img/your-connection-is-not-private.621c5152.png"},368:function(e,t,a){"use strict";a.r(t);var s=a(45),n=Object(s.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"guide"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#guide"}},[e._v("#")]),e._v(" Guide")]),e._v(" "),s("h2",{attrs:{id:"environments"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#environments"}},[e._v("#")]),e._v(" Environments")]),e._v(" "),s("h3",{attrs:{id:"managing-multiple-environments"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#managing-multiple-environments"}},[e._v("#")]),e._v(" Managing Multiple Environments")]),e._v(" "),s("p",[e._v("By default, Theme Packer will use the "),s("code",[e._v(".env")]),e._v(" file in your project root and pass any keys prefixed with "),s("code",[e._v("SHOPIFY_")]),e._v(" to "),s("a",{attrs:{href:"https://github.com/Shopify/node-themekit",target:"_blank",rel:"noopener noreferrer"}},[e._v("@shopify/themekit"),s("OutboundLink")],1),e._v(". You can however pass an "),s("code",[e._v("--env=[env]")]),e._v(" flag to the cli, which will then use environment variables from an associated "),s("code",[e._v(".env.[env]")]),e._v(" file. For example:")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[e._v("theme-packer deploy --env"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"dev"')]),e._v("\n")])])]),s("p",[e._v("will use the environment variables defined in your "),s("code",[e._v(".env.dev")]),e._v(" file.")]),e._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),s("p",[e._v("You can deploy to multiple environments at once by passing multiple "),s("code",[e._v("--env")]),e._v(" flags to the "),s("code",[e._v("deploy")]),e._v(" command. For example:")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[e._v("theme-packer deploy --env"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"uk"')]),e._v(" --env"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"us"')]),e._v(" --env"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"eu"')]),e._v("\n")])])]),s("p",[e._v("This will skip run one initial build before deploying to each environment.")])]),e._v(" "),s("p",[e._v("It's common practice to keep multiple env files for various reasons. For example you might require "),s("code",[e._v("dev")]),e._v(", "),s("code",[e._v("staging")]),e._v(" and "),s("code",[e._v("production")]),e._v(" environments through your development lifecycle. Or, if you deploy to multiple stores in various regions you might keep region-specific environments, like "),s("code",[e._v("uk")]),e._v(", "),s("code",[e._v("us")]),e._v(" and "),s("code",[e._v("eu")]),e._v(".")]),e._v(" "),s("h3",{attrs:{id:"using-config-yml"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#using-config-yml"}},[e._v("#")]),e._v(" Using config.yml")]),e._v(" "),s("p",[e._v("If you prefer to manage your environments in a "),s("code",[e._v(".yml")]),e._v(" file much like how ThemeKit does, you can simply provide a "),s("code",[e._v("SHOPIFY_CONFIG")]),e._v(" key in your "),s("code",[e._v(".env")]),e._v(" file, for example:")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("SHOPIFY_CONFIG")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("config.yml\n")])])]),s("p",[e._v("This tells Theme Packer to use "),s("code",[e._v("config.yml")]),e._v(" instead of an environment file. Please note however that when passing environment flags to match environments set up inside your config, you will need to use the "),s("code",[e._v("-e")]),e._v(" shorthand flag, instead of "),s("code",[e._v("--env")]),e._v(".")]),e._v(" "),s("h2",{attrs:{id:"ignoring-files"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ignoring-files"}},[e._v("#")]),e._v(" Ignoring Files")]),e._v(" "),s("p",[e._v("Much like how you might have a "),s("code",[e._v(".gitignore")]),e._v(" in your repository to avoid committing your "),s("code",[e._v("node_modules")]),e._v(" directory, you may find that there are theme files you need to avoid uploading to Shopify. For example, it's common to ignore the "),s("code",[e._v("settings_data.json")]),e._v(" file to avoid overwriting all of the theme settings that have changed in the customiser.")]),e._v(" "),s("p",[e._v("ThemeKit provides two options for ignoring file updates: managing your ignore list per-environment, or managing your ignorelist in a separate file. You are fine to do either, using either "),s("code",[e._v("SHOPIFY_IGNORE_FILES")]),e._v(" in your "),s("code",[e._v(".env")]),e._v(" files to manage them on an environment level, or using "),s("code",[e._v("SHOPIFY_IGNORES")]),e._v(" in your "),s("code",[e._v(".env")]),e._v(" file to manage them in a separate folder. The standard boilerplate for a Theme Packer project uses an ignorefile by default, called "),s("code",[e._v(".themekitignore")]),e._v(", and this file is tracked in Git. The reason for this is that it's safer when working in teams to share an ignore file rather than manually keeping individual "),s("code",[e._v(".env")]),e._v(" files in sync.")]),e._v(" "),s("h2",{attrs:{id:"section-schemas"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#section-schemas"}},[e._v("#")]),e._v(" Section Schemas")]),e._v(" "),s("p",[e._v("We often need schema options to be shared across multiple sections. We might for example need a predefined set of colours available to style some sections. Theme Packer allows you to write your section schemas separately as JavaScript modules and import them with a custom tag. To do so add a "),s("code",[e._v("schema")]),e._v(" tag in the following format: "),s("code",[e._v("{% schema '[import]' %}")]),e._v(", where "),s("code",[e._v("[import]")]),e._v(" is the name of the schema module in your "),s("code",[e._v("/src/schemas")]),e._v(" directory. You can read more about it here: "),s("a",{attrs:{href:"https://github.com/davidwarrington/liquid-schema-plugin",target:"_blank",rel:"noopener noreferrer"}},[e._v("Liquid Schema Plugin"),s("OutboundLink")],1),e._v(".")]),e._v(" "),s("p",[e._v("Input: "),s("code",[e._v("section.js")])]),e._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[e._v("module"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("exports "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    name"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v("'Section'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    settings"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("//...")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    blocks"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("//...")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])])]),s("p",[e._v("Input: "),s("code",[e._v("section.liquid")])]),e._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[e._v("{%- render 'section-component' -%}\n\n{% schema 'section' %}\n")])])]),s("p",[e._v("Output: "),s("code",[e._v("section.liquid")])]),e._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[e._v('{%- render \'section-component\' -%}\n\n{% schema %}\n{\n    "name": "Section",\n    "settings": [],\n    "blocks": []\n}\n{% endschema %}\n')])])]),s("h2",{attrs:{id:"always-use-external-urls"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#always-use-external-urls"}},[e._v("#")]),e._v(" Always Use External URLs")]),e._v(" "),s("p",[e._v("Sometimes you might be forced to work on your theme via a live url, such as a "),s("code",[e._v(".myshopify.com")]),e._v(" url. In such cases if you may need to enable "),s("code",[e._v("assets.always-external-urls")]),e._v(" in your "),s("code",[e._v("theme-packer.config.js")]),e._v(".")]),e._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[e._v("module"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("exports "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v("'assets.always-external-urls'")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])])]),s("p",[e._v("This will ensure that every JS and CSS tag generated by Theme Packer points to the external BrowserSync URL, rather than your "),s("code",[e._v("localhost")]),e._v(" address.")]),e._v(" "),s("p",[e._v('After launching Theme Packer with this enabled, if you find that they\'re not loading, open the console in your browser, right click the url for one of the assets and click "Open in new tab", or your browsers equivalent.')]),e._v(" "),s("p",[s("img",{attrs:{src:a(355),alt:'Highlighting "Open in new tab" in the context menu'}})]),e._v(" "),s("p",[e._v('You will should then find your browser presents a warning page. Click the "Advanced" button, followed by the "Proceed to [URL]" link. Now you should find that the assets will load for you.')]),e._v(" "),s("p",[s("img",{attrs:{src:a(356),alt:'"Your connection is not private" warning page'}})]),e._v(" "),s("p",[e._v("You may have to follow these steps again periodically, which used to cause a lot of confusion amongst users of Slate, which is why "),s("code",[e._v("assets.always-external-urls")]),e._v(" is not enabled by default.")]),e._v(" "),s("h2",{attrs:{id:"passing-flags-to-themekit"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#passing-flags-to-themekit"}},[e._v("#")]),e._v(" Passing flags to ThemeKit")]),e._v(" "),s("p",[e._v("Theme Packer supports all command flags for the "),s("a",{attrs:{href:"https://shopify.dev/tools/theme-kit/command-reference#deploy",target:"_blank",rel:"noopener noreferrer"}},[e._v("deploy"),s("OutboundLink")],1),e._v(" and "),s("a",{attrs:{href:"https://shopify.dev/tools/theme-kit/command-reference#watch",target:"_blank",rel:"noopener noreferrer"}},[e._v("watch"),s("OutboundLink")],1),e._v(" commands in Theme Kit. Simply pass the flags to your command.")]),e._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[e._v("theme-packer deploy --allow-live\n")])])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),s("p",[e._v("The "),s("code",[e._v("--allenvs")]),e._v(" flag should not work with "),s("code",[e._v(".env")]),e._v(" files. If you wish to use that flag, either use a "),s("code",[e._v("config.yml")]),e._v(", or just add multiple "),s("code",[e._v("--env")]),e._v(" flags to your script.")])])])}),[],!1,null,null,null);t.default=n.exports}}]);